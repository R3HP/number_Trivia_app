// Mocks generated by Mockito 5.0.16 from annotations
// in tdd_number_trivia_app/test/features/number_trivia/presentation/bloc/numbertrivia_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tdd_number_trivia_app/core/error/failure.dart' as _i6;
import 'package:tdd_number_trivia_app/features/number_trivia/domain/entities/number_trivia.dart'
    as _i7;
import 'package:tdd_number_trivia_app/features/number_trivia/domain/repositories/number_trivia_repository.dart'
    as _i2;
import 'package:tdd_number_trivia_app/features/number_trivia/domain/usecases/get_concret_number_trivia.dart'
    as _i3;
import 'package:tdd_number_trivia_app/features/number_trivia/domain/usecases/get_random_number_trivia.dart'
    as _i8;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeNumberTriviaRepository_0 extends _i1.Fake
    implements _i2.NumberTriviaRepository {}

/// A class which mocks [GetConcretNumberTrivia].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetConcretNumberTrivia extends _i1.Mock
    implements _i3.GetConcretNumberTrivia {
  MockGetConcretNumberTrivia() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NumberTriviaRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeNumberTriviaRepository_0())
          as _i2.NumberTriviaRepository);
  @override
  _i4.Future<_i5.Either<_i6.Failure, _i7.NumberTriviaEntitie>?> exec(
          int? number) =>
      (super.noSuchMethod(Invocation.method(#exec, [number]),
              returnValue: Future<
                  _i5.Either<_i6.Failure, _i7.NumberTriviaEntitie>?>.value())
          as _i4.Future<_i5.Either<_i6.Failure, _i7.NumberTriviaEntitie>?>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetRandomNumberTrivia].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetRandomNumberTrivia extends _i1.Mock
    implements _i8.GetRandomNumberTrivia {
  MockGetRandomNumberTrivia() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NumberTriviaRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeNumberTriviaRepository_0())
          as _i2.NumberTriviaRepository);
  @override
  _i4.Future<_i5.Either<_i6.Failure, _i7.NumberTriviaEntitie>?>
      getRandomNumberTrivia() => (super.noSuchMethod(
              Invocation.method(#getRandomNumberTrivia, []),
              returnValue: Future<
                  _i5.Either<_i6.Failure, _i7.NumberTriviaEntitie>?>.value())
          as _i4.Future<_i5.Either<_i6.Failure, _i7.NumberTriviaEntitie>?>);
  @override
  String toString() => super.toString();
}
